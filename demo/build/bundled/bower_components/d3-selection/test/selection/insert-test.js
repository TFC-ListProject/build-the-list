var tape=require("tape"),jsdom=require("../jsdom"),d3=require("../../");tape("selection.insert(name, before) inserts a new element of the specified name before the specified child of each selected element",function(e){var t=jsdom("<div id='one'><span class='before'></span></div><div id='two'><span class='before'></span></div>"),n=t.querySelector("#one"),r=t.querySelector("#two"),i=d3.selectAll([n,r]).insert("span",".before"),s=n.querySelector("span:first-child"),l=r.querySelector("span:first-child");e.deepEqual(i,{_groups:[[s,l]],_parents:[null]}),e.end()}),tape("selection.insert(function, function) inserts the returned element before the specified child of each selected element",function(e){var t=jsdom("<div id='one'><span class='before'></span></div><div id='two'><span class='before'></span></div>"),n=t.querySelector("#one"),r=t.querySelector("#two"),i=d3.selectAll([n,r]).insert(function(){return t.createElement("SPAN")},function(){return this.firstChild}),s=n.querySelector("span:first-child"),l=r.querySelector("span:first-child");e.deepEqual(i,{_groups:[[s,l]],_parents:[null]}),e.end()}),tape("selection.insert(function, function) inserts the returned element as the last child if the selector function returns null",function(e){var t=jsdom("<div id='one'><span class='before'></span></div><div id='two'><span class='before'></span></div>"),n=t.querySelector("#one"),r=t.querySelector("#two"),i=d3.selectAll([n,r]).insert(function(){return t.createElement("SPAN")},function(){}),s=n.querySelector("span:last-child"),l=r.querySelector("span:last-child");e.deepEqual(i,{_groups:[[s,l]],_parents:[null]}),e.end()}),tape("selection.insert(name, function) passes the selector function data, index and group",function(e){var t=jsdom("<parent id='one'><child id='three'></child><child id='four'></child></parent><parent id='two'><child id='five'></child></parent>"),n=t.querySelector("#one"),r=t.querySelector("#two"),i=t.querySelector("#three"),s=t.querySelector("#four"),l=t.querySelector("#five"),o=[];d3.selectAll([n,r]).datum(function(e,t){return"parent-"+t}).selectAll("child").data(function(e,t){return[0,1].map(function(e){return"child-"+t+"-"+e})}).insert("span",function(e,t,n){o.push([this,e,t,n])}),e.deepEqual(o,[[i,"child-0-0",0,[i,s]],[s,"child-0-1",1,[i,s]],[l,"child-1-0",0,[l]]]),e.end()});