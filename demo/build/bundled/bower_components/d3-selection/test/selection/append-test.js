var tape=require("tape"),jsdom=require("../jsdom"),d3=require("../../");tape("selection.append(…) returns a selection",function(e){var t=jsdom();e.ok(d3.select(t.body).append("h1")instanceof d3.selection),e.end()}),tape("selection.append(name) appends a new element of the specified name as the last child of each selected element",function(e){var t=jsdom("<div id='one'><span class='before'></span></div><div id='two'><span class='before'></span></div>"),n=t.querySelector("#one"),a=t.querySelector("#two"),l=d3.selectAll([n,a]).append("span"),r=n.querySelector("span:last-child"),d=a.querySelector("span:last-child");e.deepEqual(l,{_groups:[[r,d]],_parents:[null]}),e.end()}),tape("selection.append(name) observes the specified namespace, if any",function(e){var t=jsdom("<div id='one'></div><div id='two'></div>"),n=t.querySelector("#one"),a=t.querySelector("#two"),l=d3.selectAll([n,a]).append("svg:g"),r=n.querySelector("g"),d=a.querySelector("g");e.equal(r.namespaceURI,"http://www.w3.org/2000/svg"),e.equal(d.namespaceURI,"http://www.w3.org/2000/svg"),e.deepEqual(l,{_groups:[[r,d]],_parents:[null]}),e.end()}),tape("selection.append(name) uses createElement, not createElementNS, if the implied namespace is the same as the document",function(e){var t=0,n=jsdom("<div id='one'></div><div id='two'></div>"),a=n.querySelector("#one"),l=n.querySelector("#two"),r=n.createElement;n.createElement=function(){return++t,r.apply(this,arguments)};var d=d3.selectAll([a,l]).append("P"),p=a.querySelector("p"),o=l.querySelector("p");e.equal(t,2),e.deepEqual(d,{_groups:[[p,o]],_parents:[null]}),e.end()}),tape("selection.append(name) observes the implicit namespace, if any",function(e){var t=jsdom("<div id='one'></div><div id='two'></div>"),n=t.querySelector("#one"),a=t.querySelector("#two"),l=d3.selectAll([n,a]).append("svg"),r=n.querySelector("svg"),d=a.querySelector("svg");e.equal(r.namespaceURI,"http://www.w3.org/2000/svg"),e.equal(d.namespaceURI,"http://www.w3.org/2000/svg"),e.deepEqual(l,{_groups:[[r,d]],_parents:[null]}),e.end()}),tape("selection.append(name) observes the inherited namespace, if any",function(e){var t=jsdom("<div id='one'></div><div id='two'></div>"),n=t.querySelector("#one"),a=t.querySelector("#two"),l=d3.selectAll([n,a]).append("svg").append("g"),r=n.querySelector("g"),d=a.querySelector("g");e.equal(r.namespaceURI,"http://www.w3.org/2000/svg"),e.equal(d.namespaceURI,"http://www.w3.org/2000/svg"),e.deepEqual(l,{_groups:[[r,d]],_parents:[null]}),e.end()}),tape("selection.append(name) observes a custom namespace, if any",function(e){try{d3.namespaces.d3js="https://d3js.org/2016/namespace";var t=jsdom("<div id='one'></div><div id='two'></div>"),n=t.querySelector("#one"),a=t.querySelector("#two"),l=d3.selectAll([n,a]).append("d3js"),r=n.querySelector("d3js"),d=a.querySelector("d3js");e.equal(r.namespaceURI,"https://d3js.org/2016/namespace"),e.equal(d.namespaceURI,"https://d3js.org/2016/namespace"),e.deepEqual(l,{_groups:[[r,d]],_parents:[null]}),e.end()}finally{delete d3.namespaces.d3js}}),tape("selection.append(function) appends the returned element as the last child of each selected element",function(e){var t=jsdom("<div id='one'><span class='before'></span></div><div id='two'><span class='before'></span></div>"),n=t.querySelector("#one"),a=t.querySelector("#two"),l=d3.selectAll([n,a]).append(function(){return t.createElement("SPAN")}),r=n.querySelector("span:last-child"),d=a.querySelector("span:last-child");e.deepEqual(l,{_groups:[[r,d]],_parents:[null]}),e.end()}),tape("selection.append(function) passes the creator function data, index and group",function(e){var t=jsdom("<parent id='one'><child id='three'></child><child id='four'></child></parent><parent id='two'><child id='five'></child></parent>"),n=t.querySelector("#one"),a=t.querySelector("#two"),l=t.querySelector("#three"),r=t.querySelector("#four"),d=t.querySelector("#five"),p=[];d3.selectAll([n,a]).datum(function(e,t){return"parent-"+t}).selectAll("child").data(function(e,t){return[0,1].map(function(e){return"child-"+t+"-"+e})}).append(function(e,n,a){return p.push([this,e,n,a]),t.createElement("SPAN")}),e.deepEqual(p,[[l,"child-0-0",0,[l,r]],[r,"child-0-1",1,[l,r]],[d,"child-1-0",0,[d]]]),e.end()}),tape("selection.append(…) propagates data if defined on the originating element",function(e){var t=jsdom("<parent><child>hello</child></parent>"),n=t.querySelector("parent");n.__data__=0,e.equal(d3.select(n).append("child").datum(),0),e.end()}),tape("selection.append(…) will not propagate data if not defined on the originating element",function(e){var t=jsdom("<parent><child>hello</child></parent>"),n=t.querySelector("parent"),a=t.querySelector("child");a.__data__=42,d3.select(n).append(function(){return a}),e.equal(a.__data__,42),e.end()}),tape("selection.append(…) propagates parents from the originating selection",function(e){var t=jsdom("<parent></parent><parent></parent>"),n=d3.select(t).selectAll("parent"),a=n.append("child");e.deepEqual(n,{_groups:[t.querySelectorAll("parent")],_parents:[t]}),e.deepEqual(a,{_groups:[t.querySelectorAll("child")],_parents:[t]}),e.ok(n._parents===a._parents),e.end()}),tape("selection.append(…) can select elements when the originating selection is nested",function(e){var t=jsdom("<parent id='one'><child></child></parent><parent id='two'><child></child></parent>"),n=t.querySelector("#one"),a=t.querySelector("#two"),l=d3.selectAll([n,a]).selectAll("child").append("span"),r=n.querySelector("span"),d=a.querySelector("span");e.deepEqual(l,{_groups:[[r],[d]],_parents:[n,a]}),e.end()}),tape("selection.append(…) skips missing originating elements",function(e){var t=jsdom("<h1></h1>"),n=t.querySelector("h1"),a=d3.selectAll([,n]).append("span"),l=n.querySelector("span");e.deepEqual(a,{_groups:[[,l]],_parents:[null]}),e.end()});