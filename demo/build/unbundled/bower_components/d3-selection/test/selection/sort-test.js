var tape=require("tape"),jsdom=require("../jsdom"),d3=require("../../");tape("selection.sort(…) returns a new selection, sorting each group’s data, and then ordering the elements to match",function(e){var t=jsdom("<h1 id='one' data-value='1'></h1><h1 id='two' data-value='0'></h1><h1 id='three' data-value='2'></h1>"),n=t.querySelector("#one"),l=t.querySelector("#two"),u=t.querySelector("#three"),r=d3.selectAll([l,u,n]).datum(function(){return+this.getAttribute("data-value")}),o=r.sort(function(e,t){return e-t});e.deepEqual(r,{_groups:[[l,u,n]],_parents:[null]}),e.deepEqual(o,{_groups:[[l,n,u]],_parents:[null]}),e.equal(l.nextSibling,n),e.equal(n.nextSibling,u),e.equal(u.nextSibling,null),e.end()}),tape("selection.sort(…) sorts each group separately",function(e){var t=jsdom("<div id='one'><h1 id='three' data-value='1'></h1><h1 id='four' data-value='0'></h1></div><div id='two'><h1 id='five' data-value='3'></h1><h1 id='six' data-value='-1'></h1></div>"),n=t.querySelector("#one"),l=t.querySelector("#two"),u=t.querySelector("#three"),r=t.querySelector("#four"),o=t.querySelector("#five"),a=t.querySelector("#six"),i=d3.selectAll([n,l]).selectAll("h1").datum(function(){return+this.getAttribute("data-value")});e.deepEqual(i.sort(function(e,t){return e-t}),{_groups:[[r,u],[a,o]],_parents:[n,l]}),e.equal(r.nextSibling,u),e.equal(u.nextSibling,null),e.equal(a.nextSibling,o),e.equal(o.nextSibling,null),e.end()}),tape("selection.sort() uses natural ascending order",function(e){var t=jsdom("<h1 id='one'></h1><h1 id='two'></h1>"),n=t.querySelector("#one"),l=t.querySelector("#two"),u=d3.selectAll([l,n]).datum(function(e,t){});e.deepEqual(u.sort(),{_groups:[[l,n]],_parents:[null]}),e.equal(n.nextSibling,null),e.equal(l.nextSibling,n),e.end()}),tape("selection.sort() puts missing elements at the end of each group",function(e){var t=jsdom("<h1 id='one'></h1><h1 id='two'></h1>"),n=t.querySelector("#one"),l=t.querySelector("#two");d3.selectAll([l,n]).datum(function(e,t){return t});e.deepEqual(d3.selectAll([,n,,l]).sort(),{_groups:[[l,n,,]],_parents:[null]}),e.equal(l.nextSibling,n),e.equal(n.nextSibling,null),e.end()}),tape("selection.sort(function) puts missing elements at the end of each group",function(e){var t=jsdom("<h1 id='one'></h1><h1 id='two'></h1>"),n=t.querySelector("#one"),l=t.querySelector("#two");d3.selectAll([l,n]).datum(function(e,t){return t});e.deepEqual(d3.selectAll([,n,,l]).sort(function(e,t){return t-e}),{_groups:[[n,l,,]],_parents:[null]}),e.equal(n.nextSibling,l),e.equal(l.nextSibling,null),e.end()}),tape("selection.sort(function) uses the specified data comparator function",function(e){var t=jsdom("<h1 id='one'></h1><h1 id='two'></h1>"),n=t.querySelector("#one"),l=t.querySelector("#two"),u=d3.selectAll([l,n]).datum(function(e,t){return t});e.deepEqual(u.sort(function(e,t){return t-e}),{_groups:[[n,l]],_parents:[null]}),e.equal(n.nextSibling,l),e.equal(l.nextSibling,null),e.end()}),tape("selection.sort(function) returns a new selection, and does not modify the groups array in-place",function(e){var t=jsdom("<h1 id='one'></h1><h1 id='two'></h1>"),n=t.querySelector("#one"),l=t.querySelector("#two"),u=d3.selectAll([n,l]).datum(function(e,t){return t}),r=u.sort(function(e,t){return t-e}),o=r.sort();e.deepEqual(u,{_groups:[[n,l]],_parents:[null]}),e.deepEqual(r,{_groups:[[l,n]],_parents:[null]}),e.deepEqual(o,{_groups:[[n,l]],_parents:[null]}),e.end()});